// Don't edit this file, because it is generated by `sbt generateAttributeFactories`
package org.lrng.binding
import scala.scalajs.js
import org.scalajs.dom.raw._
import org.lrng.binding.html.NodeBinding.Interpolated.MountPointBuilder
import org.lrng.binding.html.ElementFactory
import org.lrng.binding.html.AttributeFactory
import org.lrng.binding.html.NodeBinding.Constant.AttributeSetter
import org.lrng.binding.html.elementTypes._
import com.thoughtworks.binding.Binding
private[lrng] object AttributeFactories {
  private[lrng] object properties {
    object BaseHref extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, BaseHref.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.BaseHref = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, BaseHref.type, String] {
        def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.BaseHref = _)
        }
      }
    }
    object aLink extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, aLink.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLBodyElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.aLink = _)
        }
      }
    }
    object acceptCharset extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, acceptCharset.type, String] {
        def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.acceptCharset = _)
        }
      }
    }
    object accessKey extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_Element extends MountPointBuilder[Element, accessKey.type, String] {
        def mountProperty(element: Element, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.accessKey = _)
        }
      }
    }
    object align extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLParagraphElement extends MountPointBuilder[HTMLParagraphElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLParagraphElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableCaptionElement extends MountPointBuilder[HTMLTableCaptionElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCaptionElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableRowElement extends MountPointBuilder[HTMLTableRowElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableRowElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLLegendElement extends MountPointBuilder[HTMLLegendElement, align.type, String] {
        def mountProperty(element: HTMLLegendElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableSectionElement extends MountPointBuilder[HTMLTableSectionElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableSectionElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCellElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableColElement extends MountPointBuilder[HTMLTableColElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableColElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLDivElement extends MountPointBuilder[HTMLDivElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLDivElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFieldSetElement extends MountPointBuilder[HTMLFieldSetElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFieldSetElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLHRElement extends MountPointBuilder[HTMLHRElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLHRElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLHeadingElement extends MountPointBuilder[HTMLHeadingElement, align.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLHeadingElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.align = _)
        }
      }
    }
    object altHtml extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, altHtml.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.altHtml = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, altHtml.type, String] {
        def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.altHtml = _)
        }
      }
    }
    object archive extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, archive.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.archive = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, archive.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.archive = _)
        }
      }
    }
    object axis extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, axis.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCellElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.axis = _)
        }
      }
    }
    object balance extends AttributeFactory.Typed {
      @deprecated("Non standard.", "forever") implicit object mountPointBuilder_js_Any_HTMLBGSoundElement extends MountPointBuilder[HTMLBGSoundElement, balance.type, js.Any] {
        @deprecated("Non standard.", "forever") def mountProperty(element: HTMLBGSoundElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.balance = _)
        }
      }
    }
    object behavior extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, behavior.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.behavior = _)
        }
      }
    }
    object border extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, border.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.border = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, border.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.border = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, border.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.border = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, border.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.border = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, border.type, String] {
        def mountProperty(element: HTMLIFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.border = _)
        }
      }
    }
    object borderColor extends AttributeFactory.Typed {
      implicit object mountPointBuilder_js_Any_HTMLTableRowElement extends MountPointBuilder[HTMLTableRowElement, borderColor.type, js.Any] {
        def mountProperty(element: HTMLTableRowElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.borderColor = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, borderColor.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.borderColor = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, borderColor.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.borderColor = _)
        }
      }
    }
    object borderColorDark extends AttributeFactory.Typed {
      implicit object mountPointBuilder_js_Any_HTMLTableRowElement extends MountPointBuilder[HTMLTableRowElement, borderColorDark.type, js.Any] {
        def mountProperty(element: HTMLTableRowElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.borderColorDark = _)
        }
      }
    }
    object borderColorLight extends AttributeFactory.Typed {
      implicit object mountPointBuilder_js_Any_HTMLTableRowElement extends MountPointBuilder[HTMLTableRowElement, borderColorLight.type, js.Any] {
        def mountProperty(element: HTMLTableRowElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.borderColorLight = _)
        }
      }
    }
    object caption extends AttributeFactory.Typed {
      implicit object mountPointBuilder_HTMLTableCaptionElement_HTMLTableElement extends MountPointBuilder[HTMLTableElement, caption.type, HTMLTableCaptionElement] {
        def mountProperty(element: HTMLTableElement, binding: Binding[HTMLTableCaptionElement]) = {
          Binding.BindingInstances.map(binding)(element.caption = _)
        }
      }
    }
    object cellPadding extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, cellPadding.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.cellPadding = _)
        }
      }
    }
    object cellSpacing extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, cellSpacing.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.cellSpacing = _)
        }
      }
    }
    object classList extends AttributeFactory.Typed {
      implicit object mountPointBuilder_DOMTokenList_Element extends MountPointBuilder[Element, classList.type, DOMTokenList] {
        def mountProperty(element: Element, binding: Binding[DOMTokenList]) = {
          Binding.BindingInstances.map(binding)(element.classList = _)
        }
      }
    }
    object className extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLElement extends MountPointBuilder[HTMLElement, className.type, String] {
        def mountProperty(element: HTMLElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.className = _)
        }
      }
    }
    object classid extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, classid.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.classid = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, classid.type, String] {
        def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.classid = _)
        }
      }
    }
    object clear extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLBRElement extends MountPointBuilder[HTMLBRElement, clear.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLBRElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.clear = _)
        }
      }
    }
    object code extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, code.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.code = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, code.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.code = _)
        }
      }
    }
    object codeBase extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, codeBase.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.codeBase = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, codeBase.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.codeBase = _)
        }
      }
    }
    object codeType extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, codeType.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.codeType = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, codeType.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.codeType = _)
        }
      }
    }
    object colSpan extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, colSpan.type, Int] {
        def mountProperty(element: HTMLTableCellElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.colSpan = _)
        }
      }
    }
    object contentDocument extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Document_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, contentDocument.type, Document] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[Document]) = {
          Binding.BindingInstances.map(binding)(element.contentDocument = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Document_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, contentDocument.type, Document] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[Document]) = {
          Binding.BindingInstances.map(binding)(element.contentDocument = _)
        }
      }
    }
    object contentEditable extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLElement extends MountPointBuilder[HTMLElement, contentEditable.type, String] {
        def mountProperty(element: HTMLElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.contentEditable = _)
        }
      }
    }
    object contentWindow extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Window_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, contentWindow.type, Window] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[Window]) = {
          Binding.BindingInstances.map(binding)(element.contentWindow = _)
        }
      }
    }
    object currentTime extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, currentTime.type, Double] {
        def mountProperty(element: HTMLMediaElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.currentTime = _)
        }
      }
    }
    object dateTime extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLQuoteElement extends MountPointBuilder[HTMLQuoteElement, dateTime.type, String] {
        def mountProperty(element: HTMLQuoteElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.dateTime = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLPhraseElement extends MountPointBuilder[HTMLPhraseElement, dateTime.type, String] {
        def mountProperty(element: HTMLPhraseElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.dateTime = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLModElement extends MountPointBuilder[HTMLModElement, dateTime.type, String] {
        def mountProperty(element: HTMLModElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.dateTime = _)
        }
      }
    }
    object declare extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Boolean_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, declare.type, Boolean] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.declare = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Boolean_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, declare.type, Boolean] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLObjectElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.declare = _)
        }
      }
    }
    object defaultChecked extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, defaultChecked.type, Boolean] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.defaultChecked = _)
        }
      }
    }
    object defaultPlaybackRate extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, defaultPlaybackRate.type, Double] {
        def mountProperty(element: HTMLMediaElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.defaultPlaybackRate = _)
        }
      }
    }
    object defaultSelected extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLOptionElement extends MountPointBuilder[HTMLOptionElement, defaultSelected.type, Boolean] {
        def mountProperty(element: HTMLOptionElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.defaultSelected = _)
        }
      }
    }
    object defaultValue extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, defaultValue.type, String] {
        def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.defaultValue = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, defaultValue.type, String] {
        def mountProperty(element: HTMLTextAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.defaultValue = _)
        }
      }
    }
    object direction extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, direction.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.direction = _)
        }
      }
    }
    object encoding extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, encoding.type, String] {
        def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.encoding = _)
        }
      }
    }
    object event extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, event.type, String] {
        def mountProperty(element: HTMLScriptElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.event = _)
        }
      }
    }
    object face extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 4.01") implicit object mountPointBuilder_String_HTMLFontElement extends MountPointBuilder[HTMLFontElement, face.type, String] {
        @deprecated("Obsolete.", "HTML 4.01") def mountProperty(element: HTMLFontElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.face = _)
        }
      }
      @deprecated("Obsolete.", "DOM Level 2") implicit object mountPointBuilder_String_HTMLBaseFontElement extends MountPointBuilder[HTMLBaseFontElement, face.type, String] {
        @deprecated("Obsolete.", "DOM Level 2") def mountProperty(element: HTMLBaseFontElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.face = _)
        }
      }
    }
    object files extends AttributeFactory.Typed {
      implicit object mountPointBuilder_FileList_HTMLInputElement extends MountPointBuilder[HTMLInputElement, files.type, FileList] {
        def mountProperty(element: HTMLInputElement, binding: Binding[FileList]) = {
          Binding.BindingInstances.map(binding)(element.files = _)
        }
      }
    }
    object filters extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Object_HTMLElement extends MountPointBuilder[HTMLElement, filters.type, Object] {
        def mountProperty(element: HTMLElement, binding: Binding[Object]) = {
          Binding.BindingInstances.map(binding)(element.filters = _)
        }
      }
    }
    object formAction extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, formAction.type, String] {
        def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formAction = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, formAction.type, String] {
        def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formAction = _)
        }
      }
    }
    object formEnctype extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, formEnctype.type, String] {
        def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formEnctype = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, formEnctype.type, String] {
        def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formEnctype = _)
        }
      }
    }
    object formMethod extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, formMethod.type, String] {
        def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formMethod = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, formMethod.type, String] {
        def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formMethod = _)
        }
      }
    }
    object formNoValidate extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, formNoValidate.type, String] {
        def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formNoValidate = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, formNoValidate.type, String] {
        def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formNoValidate = _)
        }
      }
    }
    object formTarget extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, formTarget.type, String] {
        def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formTarget = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, formTarget.type, String] {
        def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.formTarget = _)
        }
      }
    }
    object frame extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, frame.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.frame = _)
        }
      }
    }
    object frameBorder extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, frameBorder.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.frameBorder = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, frameBorder.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.frameBorder = _)
        }
      }
    }
    object frameSpacing extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, frameSpacing.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.frameSpacing = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, frameSpacing.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.frameSpacing = _)
        }
      }
    }
    object gotpointercapture extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, gotpointercapture.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.gotpointercapture = _)
        }
      }
    }
    object hash extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, hash.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.hash = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, hash.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.hash = _)
        }
      }
    }
    object host extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, host.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.host = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, host.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.host = _)
        }
      }
    }
    object hostname extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, hostname.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.hostname = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, hostname.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.hostname = _)
        }
      }
    }
    object hspace extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLImageElement extends MountPointBuilder[HTMLImageElement, hspace.type, Int] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLImageElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.hspace = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, hspace.type, Int] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.hspace = _)
        }
      }
    }
    object htmlFor extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, htmlFor.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLScriptElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.htmlFor = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLLabelElement extends MountPointBuilder[HTMLLabelElement, htmlFor.type, String] {
        def mountProperty(element: HTMLLabelElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.htmlFor = _)
        }
      }
    }
    object httpEquiv extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLMetaElement extends MountPointBuilder[HTMLMetaElement, httpEquiv.type, String] {
        def mountProperty(element: HTMLMetaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.httpEquiv = _)
        }
      }
    }
    object indeterminate extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, indeterminate.type, Boolean] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.indeterminate = _)
        }
      }
    }
    object innerHTML extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_Element extends MountPointBuilder[Element, innerHTML.type, String] {
        def mountProperty(element: Element, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.innerHTML = _)
        }
      }
    }
    object isMap extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLImageElement extends MountPointBuilder[HTMLImageElement, isMap.type, Boolean] {
        def mountProperty(element: HTMLImageElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.isMap = _)
        }
      }
    }
    object leftMargin extends AttributeFactory.Typed {
      @deprecated("Non standard.", "forever") implicit object mountPointBuilder_js_Any_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, leftMargin.type, js.Any] {
        @deprecated("Non standard.", "forever") def mountProperty(element: HTMLBodyElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.leftMargin = _)
        }
      }
    }
    object length extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, length.type, Int] {
        def mountProperty(element: HTMLSelectElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.length = _)
        }
      }
    }
    object link extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, link.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLBodyElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.link = _)
        }
      }
    }
    object longDesc extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, longDesc.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.longDesc = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, longDesc.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.longDesc = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, longDesc.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLIFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.longDesc = _)
        }
      }
    }
    object lostpointercapture extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, lostpointercapture.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.lostpointercapture = _)
        }
      }
    }
    object marginHeight extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, marginHeight.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.marginHeight = _)
        }
      }
    }
    object marginWidth extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, marginWidth.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.marginWidth = _)
        }
      }
    }
    object maxLength extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLInputElement extends MountPointBuilder[HTMLInputElement, maxLength.type, Int] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.maxLength = _)
        }
      }
      implicit object mountPointBuilder_Int_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, maxLength.type, Int] {
        def mountProperty(element: HTMLTextAreaElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.maxLength = _)
        }
      }
    }
    object mimeType extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, mimeType.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.mimeType = _)
        }
      }
    }
    object naturalHeight extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLImageElement extends MountPointBuilder[HTMLImageElement, naturalHeight.type, Int] {
        def mountProperty(element: HTMLImageElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.naturalHeight = _)
        }
      }
    }
    object naturalWidth extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLImageElement extends MountPointBuilder[HTMLImageElement, naturalWidth.type, Int] {
        def mountProperty(element: HTMLImageElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.naturalWidth = _)
        }
      }
    }
    object noHref extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Boolean_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, noHref.type, Boolean] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAreaElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.noHref = _)
        }
      }
    }
    object noResize extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Boolean_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, noResize.type, Boolean] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.noResize = _)
        }
      }
    }
    object noValidate extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLFormElement extends MountPointBuilder[HTMLFormElement, noValidate.type, Boolean] {
        def mountProperty(element: HTMLFormElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.noValidate = _)
        }
      }
    }
    object noWrap extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLDDElement extends MountPointBuilder[HTMLDDElement, noWrap.type, Boolean] {
        def mountProperty(element: HTMLDDElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.noWrap = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Boolean_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, noWrap.type, Boolean] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCellElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.noWrap = _)
        }
      }
      implicit object mountPointBuilder_Boolean_HTMLDTElement extends MountPointBuilder[HTMLDTElement, noWrap.type, Boolean] {
        def mountProperty(element: HTMLDTElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.noWrap = _)
        }
      }
    }
    object `object` extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, `object`.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.`object` = _)
        }
      }
      implicit object mountPointBuilder_Object_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, `object`.type, Object] {
        def mountProperty(element: HTMLObjectElement, binding: Binding[Object]) = {
          Binding.BindingInstances.map(binding)(element.`object` = _)
        }
      }
    }
    object onactivate extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onactivate.type, js.Function1[UIEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onactivate = _)
        }
      }
    }
    object onbeforeactivate extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onbeforeactivate.type, js.Function1[UIEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onbeforeactivate = _)
        }
      }
    }
    object onbeforecopy extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onbeforecopy.type, js.Function1[DragEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onbeforecopy = _)
        }
      }
    }
    object onbeforecut extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onbeforecut.type, js.Function1[DragEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onbeforecut = _)
        }
      }
    }
    object onbeforedeactivate extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onbeforedeactivate.type, js.Function1[UIEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onbeforedeactivate = _)
        }
      }
    }
    object onbeforepaste extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onbeforepaste.type, js.Function1[DragEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onbeforepaste = _)
        }
      }
    }
    object onbounce extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLMarqueeElement` extends MountPointBuilder[HTMLMarqueeElement, onbounce.type, js.Function1[Event, _]] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[js.Function1[Event, _]]) = {
          Binding.BindingInstances.map(binding)(element.onbounce = _)
        }
      }
    }
    object ondeactivate extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondeactivate.type, js.Function1[UIEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.ondeactivate = _)
        }
      }
    }
    object onfinish extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLMarqueeElement` extends MountPointBuilder[HTMLMarqueeElement, onfinish.type, js.Function1[Event, _]] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[js.Function1[Event, _]]) = {
          Binding.BindingInstances.map(binding)(element.onfinish = _)
        }
      }
    }
    object onfocusin extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[FocusEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onfocusin.type, js.Function1[FocusEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[FocusEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onfocusin = _)
        }
      }
    }
    object onfocusout extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[FocusEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onfocusout.type, js.Function1[FocusEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[FocusEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onfocusout = _)
        }
      }
    }
    object onhelp extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onhelp.type, js.Function1[Event, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
          Binding.BindingInstances.map(binding)(element.onhelp = _)
        }
      }
    }
    object onmousewheel extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[WheelEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmousewheel.type, js.Function1[WheelEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[WheelEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onmousewheel = _)
        }
      }
    }
    object onpointercancel extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointercancel.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointercancel = _)
        }
      }
    }
    object onpointerdown extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointerdown.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointerdown = _)
        }
      }
    }
    object onpointerenter extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointerenter.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointerenter = _)
        }
      }
    }
    object onpointerleave extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointerleave.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointerleave = _)
        }
      }
    }
    object onpointermove extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointermove.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointermove = _)
        }
      }
    }
    object onpointerout extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointerout.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointerout = _)
        }
      }
    }
    object onpointerover extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointerover.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointerover = _)
        }
      }
    }
    object onpointerup extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[PointerEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpointerup.type, js.Function1[PointerEvent, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[PointerEvent, _]]) = {
          Binding.BindingInstances.map(binding)(element.onpointerup = _)
        }
      }
    }
    object onreadystatechange extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onreadystatechange.type, js.Function1[Event, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
          Binding.BindingInstances.map(binding)(element.onreadystatechange = _)
        }
      }
    }
    object onselectstart extends AttributeFactory.Typed {
      implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onselectstart.type, js.Function1[Event, _]] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
          Binding.BindingInstances.map(binding)(element.onselectstart = _)
        }
      }
    }
    object onstart extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLMarqueeElement` extends MountPointBuilder[HTMLMarqueeElement, onstart.type, js.Function1[Event, _]] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[js.Function1[Event, _]]) = {
          Binding.BindingInstances.map(binding)(element.onstart = _)
        }
      }
    }
    object outerHTML extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_Element extends MountPointBuilder[Element, outerHTML.type, String] {
        def mountProperty(element: Element, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.outerHTML = _)
        }
      }
    }
    object parentElement extends AttributeFactory.Typed {
      implicit object mountPointBuilder_HTMLElement_HTMLElement extends MountPointBuilder[HTMLElement, parentElement.type, HTMLElement] {
        def mountProperty(element: HTMLElement, binding: Binding[HTMLElement]) = {
          Binding.BindingInstances.map(binding)(element.parentElement = _)
        }
      }
    }
    object pathname extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, pathname.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.pathname = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, pathname.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.pathname = _)
        }
      }
    }
    object playbackRate extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, playbackRate.type, Double] {
        def mountProperty(element: HTMLMediaElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.playbackRate = _)
        }
      }
    }
    object port extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, port.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.port = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, port.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.port = _)
        }
      }
    }
    object profile extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLHeadElement extends MountPointBuilder[HTMLHeadElement, profile.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLHeadElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.profile = _)
        }
      }
    }
    object prompt extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 4.01") implicit object mountPointBuilder_String_HTMLIsIndexElement extends MountPointBuilder[HTMLIsIndexElement, prompt.type, String] {
        @deprecated("Obsolete.", "HTML 4.01") def mountProperty(element: HTMLIsIndexElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.prompt = _)
        }
      }
    }
    object protocol extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, protocol.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.protocol = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, protocol.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.protocol = _)
        }
      }
    }
    object readOnly extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, readOnly.type, Boolean] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.readOnly = _)
        }
      }
      implicit object mountPointBuilder_Boolean_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, readOnly.type, Boolean] {
        def mountProperty(element: HTMLTextAreaElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.readOnly = _)
        }
      }
    }
    object readyState extends AttributeFactory.Typed {
      implicit object mountPointBuilder_js_Any_HTMLElement extends MountPointBuilder[HTMLElement, readyState.type, js.Any] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.readyState = _)
        }
      }
    }
    object recordNumber extends AttributeFactory.Typed {
      implicit object mountPointBuilder_js_Any_HTMLElement extends MountPointBuilder[HTMLElement, recordNumber.type, js.Any] {
        def mountProperty(element: HTMLElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.recordNumber = _)
        }
      }
    }
    object rev extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, rev.type, String] {
        def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.rev = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, rev.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.rev = _)
        }
      }
    }
    object rightMargin extends AttributeFactory.Typed {
      @deprecated("Non standard.", "forever") implicit object mountPointBuilder_js_Any_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, rightMargin.type, js.Any] {
        @deprecated("Non standard.", "forever") def mountProperty(element: HTMLBodyElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.rightMargin = _)
        }
      }
    }
    object rowSpan extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, rowSpan.type, Int] {
        def mountProperty(element: HTMLTableCellElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.rowSpan = _)
        }
      }
    }
    object rules extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, rules.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.rules = _)
        }
      }
    }
    object scheme extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLMetaElement extends MountPointBuilder[HTMLMetaElement, scheme.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMetaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.scheme = _)
        }
      }
    }
    object scroll extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, scroll.type, String] {
        def mountProperty(element: HTMLBodyElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.scroll = _)
        }
      }
    }
    object scrollAmount extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Double_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, scrollAmount.type, Double] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.scrollAmount = _)
        }
      }
    }
    object scrollDelay extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Double_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, scrollDelay.type, Double] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.scrollDelay = _)
        }
      }
    }
    object scrollLeft extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_Element extends MountPointBuilder[Element, scrollLeft.type, Double] {
        def mountProperty(element: Element, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.scrollLeft = _)
        }
      }
    }
    object scrollTop extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_Element extends MountPointBuilder[Element, scrollTop.type, Double] {
        def mountProperty(element: Element, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.scrollTop = _)
        }
      }
    }
    object scrolling extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, scrolling.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.scrolling = _)
        }
      }
    }
    object search extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, search.type, String] {
        def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.search = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, search.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.search = _)
        }
      }
    }
    object security extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, security.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.security = _)
        }
      }
      implicit object mountPointBuilder_js_Any_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, security.type, js.Any] {
        def mountProperty(element: HTMLIFrameElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.security = _)
        }
      }
    }
    object selectedIndex extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, selectedIndex.type, Int] {
        def mountProperty(element: HTMLSelectElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.selectedIndex = _)
        }
      }
    }
    object selectionEnd extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLInputElement extends MountPointBuilder[HTMLInputElement, selectionEnd.type, Int] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.selectionEnd = _)
        }
      }
      implicit object mountPointBuilder_Int_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, selectionEnd.type, Int] {
        def mountProperty(element: HTMLTextAreaElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.selectionEnd = _)
        }
      }
    }
    object selectionStart extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLInputElement extends MountPointBuilder[HTMLInputElement, selectionStart.type, Int] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.selectionStart = _)
        }
      }
      implicit object mountPointBuilder_Int_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, selectionStart.type, Int] {
        def mountProperty(element: HTMLTextAreaElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.selectionStart = _)
        }
      }
    }
    object standby extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, standby.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.standby = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, standby.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.standby = _)
        }
      }
    }
    object status extends AttributeFactory.Typed {
      implicit object mountPointBuilder_js_Any_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, status.type, js.Any] {
        def mountProperty(element: HTMLButtonElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.status = _)
        }
      }
      implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, status.type, Boolean] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.status = _)
        }
      }
      implicit object mountPointBuilder_js_Any_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, status.type, js.Any] {
        def mountProperty(element: HTMLTextAreaElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.status = _)
        }
      }
    }
    object summary extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, summary.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.summary = _)
        }
      }
    }
    object tFoot extends AttributeFactory.Typed {
      implicit object mountPointBuilder_HTMLTableSectionElement_HTMLTableElement extends MountPointBuilder[HTMLTableElement, tFoot.type, HTMLTableSectionElement] {
        def mountProperty(element: HTMLTableElement, binding: Binding[HTMLTableSectionElement]) = {
          Binding.BindingInstances.map(binding)(element.tFoot = _)
        }
      }
    }
    object tHead extends AttributeFactory.Typed {
      implicit object mountPointBuilder_HTMLTableSectionElement_HTMLTableElement extends MountPointBuilder[HTMLTableElement, tHead.type, HTMLTableSectionElement] {
        def mountProperty(element: HTMLTableElement, binding: Binding[HTMLTableSectionElement]) = {
          Binding.BindingInstances.map(binding)(element.tHead = _)
        }
      }
    }
    object tabIndex extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Int_HTMLElement extends MountPointBuilder[HTMLElement, tabIndex.type, Int] {
        def mountProperty(element: HTMLElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.tabIndex = _)
        }
      }
    }
    object text extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLOptionElement extends MountPointBuilder[HTMLOptionElement, text.type, String] {
        def mountProperty(element: HTMLOptionElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.text = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, text.type, String] {
        def mountProperty(element: HTMLScriptElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.text = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, text.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLBodyElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.text = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, text.type, String] {
        def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.text = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLTitleElement extends MountPointBuilder[HTMLTitleElement, text.type, String] {
        def mountProperty(element: HTMLTitleElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.text = _)
        }
      }
    }
    object trueSpeed extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Boolean_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, trueSpeed.type, Boolean] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[Boolean]) = {
          Binding.BindingInstances.map(binding)(element.trueSpeed = _)
        }
      }
    }
    object url extends AttributeFactory.Typed {
      implicit object mountPointBuilder_String_HTMLMetaElement extends MountPointBuilder[HTMLMetaElement, url.type, String] {
        def mountProperty(element: HTMLMetaElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.url = _)
        }
      }
    }
    object useMap extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, useMap.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.useMap = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, useMap.type, String] {
        def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.useMap = _)
        }
      }
      implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, useMap.type, String] {
        def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.useMap = _)
        }
      }
    }
    object vAlign extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableCaptionElement extends MountPointBuilder[HTMLTableCaptionElement, vAlign.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCaptionElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.vAlign = _)
        }
      }
    }
    object vLink extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLBodyElement extends MountPointBuilder[HTMLBodyElement, vLink.type, js.Any] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLBodyElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.vLink = _)
        }
      }
    }
    object valueAsNumber extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_HTMLInputElement extends MountPointBuilder[HTMLInputElement, valueAsNumber.type, Double] {
        def mountProperty(element: HTMLInputElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.valueAsNumber = _)
        }
      }
    }
    object valueType extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLParamElement extends MountPointBuilder[HTMLParamElement, valueType.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLParamElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.valueType = _)
        }
      }
    }
    object version extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLHtmlElement extends MountPointBuilder[HTMLHtmlElement, version.type, String] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLHtmlElement, binding: Binding[String]) = {
          Binding.BindingInstances.map(binding)(element.version = _)
        }
      }
    }
    object volume extends AttributeFactory.Typed {
      implicit object mountPointBuilder_Double_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, volume.type, Double] {
        def mountProperty(element: HTMLMediaElement, binding: Binding[Double]) = {
          Binding.BindingInstances.map(binding)(element.volume = _)
        }
      }
      @deprecated("Non standard.", "forever") implicit object mountPointBuilder_js_Any_HTMLBGSoundElement extends MountPointBuilder[HTMLBGSoundElement, volume.type, js.Any] {
        @deprecated("Non standard.", "forever") def mountProperty(element: HTMLBGSoundElement, binding: Binding[js.Any]) = {
          Binding.BindingInstances.map(binding)(element.volume = _)
        }
      }
    }
    object vspace extends AttributeFactory.Typed {
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLImageElement extends MountPointBuilder[HTMLImageElement, vspace.type, Int] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLImageElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.vspace = _)
        }
      }
      @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, vspace.type, Int] {
        @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[Int]) = {
          Binding.BindingInstances.map(binding)(element.vspace = _)
        }
      }
    }
  }
  import properties._
  @inline def BaseHref: properties.BaseHref.type = properties.BaseHref
  @inline def aLink: properties.aLink.type = properties.aLink
  object abbr extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLTableCellElement: AttributeSetter[HTMLTableCellElement, abbr.type] = new AttributeSetter(_.setAttribute("abbr", _)) }
  object accept extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, accept.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.accept = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, accept.type] = new AttributeSetter(_.setAttribute("accept", _))
  }
  object accept$minuscharset extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, accept$minuscharset.type] = new AttributeSetter(_.setAttribute("accept-charset", _)) }
  @inline def acceptCharset: properties.acceptCharset.type = properties.acceptCharset
  @inline def accessKey: properties.accessKey.type = properties.accessKey
  object accesskey extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, accesskey.type] = new AttributeSetter(_.setAttribute("accesskey", _)) }
  object action extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 4.01") implicit object mountPointBuilder_String_HTMLIsIndexElement extends MountPointBuilder[HTMLIsIndexElement, action.type, String] {
      @deprecated("Obsolete.", "HTML 4.01") def mountProperty(element: HTMLIsIndexElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.action = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, action.type, String] {
      def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.action = _)
      }
    }
    @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, action.type] = new AttributeSetter(_.setAttribute("action", _))
  }
  @inline def align: properties.align.type = properties.align
  object allow extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, allow.type] = new AttributeSetter(_.setAttribute("allow", _)) }
  object allowfullscreen extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, allowfullscreen.type] = new AttributeSetter(_.setAttribute("allowfullscreen", _)) }
  object allowpaymentrequest extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, allowpaymentrequest.type] = new AttributeSetter(_.setAttribute("allowpaymentrequest", _)) }
  object alt extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, alt.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.alt = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, alt.type, String] {
      def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.alt = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, alt.type, String] {
      def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.alt = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, alt.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.alt = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, alt.type, String] {
      def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.alt = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, alt.type] = new AttributeSetter(_.setAttribute("alt", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, alt.type] = new AttributeSetter(_.setAttribute("alt", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, alt.type] = new AttributeSetter(_.setAttribute("alt", _))
  }
  @inline def altHtml: properties.altHtml.type = properties.altHtml
  @inline def archive: properties.archive.type = properties.archive
  object as extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, as.type] = new AttributeSetter(_.setAttribute("as", _)) }
  object async extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, async.type, Boolean] {
      def mountProperty(element: HTMLScriptElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.async = _)
      }
    }
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, async.type] = new AttributeSetter(_.setAttribute("async", _))
  }
  object autocapitalize extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, autocapitalize.type] = new AttributeSetter(_.setAttribute("autocapitalize", _)) }
  object autocomplete extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, autocomplete.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.autocomplete = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, autocomplete.type, String] {
      def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.autocomplete = _)
      }
    }
    @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, autocomplete.type] = new AttributeSetter(_.setAttribute("autocomplete", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, autocomplete.type] = new AttributeSetter(_.setAttribute("autocomplete", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, autocomplete.type] = new AttributeSetter(_.setAttribute("autocomplete", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, autocomplete.type] = new AttributeSetter(_.setAttribute("autocomplete", _))
  }
  object autofocus extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, autofocus.type, Boolean] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.autofocus = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, autofocus.type, Boolean] {
      def mountProperty(element: HTMLButtonElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.autofocus = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, autofocus.type, Boolean] {
      def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.autofocus = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, autofocus.type, Boolean] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.autofocus = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, autofocus.type] = new AttributeSetter(_.setAttribute("autofocus", _))
  }
  object autoplay extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, autoplay.type, Boolean] {
      def mountProperty(element: HTMLMediaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.autoplay = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, autoplay.type] = new AttributeSetter(_.setAttribute("autoplay", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, autoplay.type] = new AttributeSetter(_.setAttribute("autoplay", _))
  }
  @inline def axis: properties.axis.type = properties.axis
  @inline def balance: properties.balance.type = properties.balance
  @inline def behavior: properties.behavior.type = properties.behavior
  @inline def border: properties.border.type = properties.border
  @inline def borderColor: properties.borderColor.type = properties.borderColor
  @inline def borderColorDark: properties.borderColorDark.type = properties.borderColorDark
  @inline def borderColorLight: properties.borderColorLight.type = properties.borderColorLight
  @inline def caption: properties.caption.type = properties.caption
  @inline def cellPadding: properties.cellPadding.type = properties.cellPadding
  @inline def cellSpacing: properties.cellSpacing.type = properties.cellSpacing
  object charset extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLMetaElement extends MountPointBuilder[HTMLMetaElement, charset.type, String] {
      def mountProperty(element: HTMLMetaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.charset = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, charset.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.charset = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, charset.type, String] {
      def mountProperty(element: HTMLScriptElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.charset = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, charset.type, String] {
      def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.charset = _)
      }
    }
    @inline implicit def attributeSetter_HTMLMetaElement: AttributeSetter[HTMLMetaElement, charset.type] = new AttributeSetter(_.setAttribute("charset", _))
  }
  object checked extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, checked.type, Boolean] {
      def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.checked = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, checked.type] = new AttributeSetter(_.setAttribute("checked", _))
  }
  object cite extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLQuoteElement extends MountPointBuilder[HTMLQuoteElement, cite.type, String] {
      def mountProperty(element: HTMLQuoteElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.cite = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLModElement extends MountPointBuilder[HTMLModElement, cite.type, String] {
      def mountProperty(element: HTMLModElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.cite = _)
      }
    }
    @inline implicit def attributeSetter_HTMLQuoteElement: AttributeSetter[HTMLQuoteElement, cite.type] = new AttributeSetter(_.setAttribute("cite", _))
    @inline implicit def attributeSetter_HTMLModElement: AttributeSetter[HTMLModElement, cite.type] = new AttributeSetter(_.setAttribute("cite", _))
  }
  object `class` extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, `class`.type] = new AttributeSetter(_.setAttribute("class", _)) }
  @inline def classList: properties.classList.type = properties.classList
  @inline def className: properties.className.type = properties.className
  @inline def classid: properties.classid.type = properties.classid
  @inline def clear: properties.clear.type = properties.clear
  @inline def code: properties.code.type = properties.code
  @inline def codeBase: properties.codeBase.type = properties.codeBase
  @inline def codeType: properties.codeType.type = properties.codeType
  @inline def colSpan: properties.colSpan.type = properties.colSpan
  object color extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, color.type] = new AttributeSetter(_.setAttribute("color", _)) }
  object cols extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, cols.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.cols = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, cols.type, Int] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.cols = _)
      }
    }
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, cols.type] = new AttributeSetter(_.setAttribute("cols", _))
  }
  object colspan extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLTableCellElement: AttributeSetter[HTMLTableCellElement, colspan.type] = new AttributeSetter(_.setAttribute("colspan", _)) }
  object content extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLMetaElement extends MountPointBuilder[HTMLMetaElement, content.type, String] {
      def mountProperty(element: HTMLMetaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.content = _)
      }
    }
    @inline implicit def attributeSetter_HTMLMetaElement: AttributeSetter[HTMLMetaElement, content.type] = new AttributeSetter(_.setAttribute("content", _))
  }
  @inline def contentDocument: properties.contentDocument.type = properties.contentDocument
  @inline def contentEditable: properties.contentEditable.type = properties.contentEditable
  @inline def contentWindow: properties.contentWindow.type = properties.contentWindow
  object contenteditable extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, contenteditable.type] = new AttributeSetter(_.setAttribute("contenteditable", _)) }
  object controls extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, controls.type, Boolean] {
      def mountProperty(element: HTMLMediaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.controls = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, controls.type] = new AttributeSetter(_.setAttribute("controls", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, controls.type] = new AttributeSetter(_.setAttribute("controls", _))
  }
  object coords extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, coords.type, String] {
      def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.coords = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, coords.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.coords = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, coords.type] = new AttributeSetter(_.setAttribute("coords", _))
  }
  object crossorigin extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, crossorigin.type] = new AttributeSetter(_.setAttribute("crossorigin", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, crossorigin.type] = new AttributeSetter(_.setAttribute("crossorigin", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, crossorigin.type] = new AttributeSetter(_.setAttribute("crossorigin", _))
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, crossorigin.type] = new AttributeSetter(_.setAttribute("crossorigin", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, crossorigin.type] = new AttributeSetter(_.setAttribute("crossorigin", _))
  }
  @inline def currentTime: properties.currentTime.type = properties.currentTime
  object data extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, data.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.data = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, data.type, String] {
      def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.data = _)
      }
    }
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, data.type] = new AttributeSetter(_.setAttribute("data", _))
  }
  @inline def dateTime: properties.dateTime.type = properties.dateTime
  object datetime extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLModElement: AttributeSetter[HTMLModElement, datetime.type] = new AttributeSetter(_.setAttribute("datetime", _))
    @inline implicit def attributeSetter_HTMLTimeElement: AttributeSetter[HTMLTimeElement, datetime.type] = new AttributeSetter(_.setAttribute("datetime", _))
  }
  @inline def declare: properties.declare.type = properties.declare
  object decoding extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, decoding.type] = new AttributeSetter(_.setAttribute("decoding", _)) }
  object default extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLTrackElement: AttributeSetter[HTMLTrackElement, default.type] = new AttributeSetter(_.setAttribute("default", _)) }
  @inline def defaultChecked: properties.defaultChecked.type = properties.defaultChecked
  @inline def defaultPlaybackRate: properties.defaultPlaybackRate.type = properties.defaultPlaybackRate
  @inline def defaultSelected: properties.defaultSelected.type = properties.defaultSelected
  @inline def defaultValue: properties.defaultValue.type = properties.defaultValue
  object defer extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, defer.type, Boolean] {
      def mountProperty(element: HTMLScriptElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.defer = _)
      }
    }
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, defer.type] = new AttributeSetter(_.setAttribute("defer", _))
  }
  object dir extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLElement extends MountPointBuilder[HTMLElement, dir.type, String] {
      def mountProperty(element: HTMLElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.dir = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, dir.type] = new AttributeSetter(_.setAttribute("dir", _))
  }
  @inline def direction: properties.direction.type = properties.direction
  object dirname extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, dirname.type] = new AttributeSetter(_.setAttribute("dirname", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, dirname.type] = new AttributeSetter(_.setAttribute("dirname", _))
  }
  object disabled extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLOptionElement extends MountPointBuilder[HTMLOptionElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLOptionElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLButtonElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLFieldSetElement extends MountPointBuilder[HTMLFieldSetElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLFieldSetElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLOptGroupElement extends MountPointBuilder[HTMLOptGroupElement, disabled.type, Boolean] {
      def mountProperty(element: HTMLOptGroupElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.disabled = _)
      }
    }
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
    @inline implicit def attributeSetter_HTMLOptGroupElement: AttributeSetter[HTMLOptGroupElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
    @inline implicit def attributeSetter_HTMLOptionElement: AttributeSetter[HTMLOptionElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
    @inline implicit def attributeSetter_HTMLFieldSetElement: AttributeSetter[HTMLFieldSetElement, disabled.type] = new AttributeSetter(_.setAttribute("disabled", _))
  }
  object download extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, download.type] = new AttributeSetter(_.setAttribute("download", _))
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, download.type] = new AttributeSetter(_.setAttribute("download", _))
  }
  object draggable extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLElement extends MountPointBuilder[HTMLElement, draggable.type, Boolean] {
      def mountProperty(element: HTMLElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.draggable = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, draggable.type] = new AttributeSetter(_.setAttribute("draggable", _))
  }
  @inline def encoding: properties.encoding.type = properties.encoding
  object enctype extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, enctype.type, String] {
      def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.enctype = _)
      }
    }
    @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, enctype.type] = new AttributeSetter(_.setAttribute("enctype", _))
  }
  object enterkeyhint extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, enterkeyhint.type] = new AttributeSetter(_.setAttribute("enterkeyhint", _)) }
  @inline def event: properties.event.type = properties.event
  @inline def face: properties.face.type = properties.face
  @inline def files: properties.files.type = properties.files
  @inline def filters: properties.filters.type = properties.filters
  object `for` extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLLabelElement: AttributeSetter[HTMLLabelElement, `for`.type] = new AttributeSetter(_.setAttribute("for", _))
    @inline implicit def attributeSetter_HTMLOutputElement: AttributeSetter[HTMLOutputElement, `for`.type] = new AttributeSetter(_.setAttribute("for", _))
  }
  object form extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_HTMLFormElement_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, form.type, HTMLFormElement] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[HTMLFormElement]) = {
        Binding.BindingInstances.map(binding)(element.form = _)
      }
    }
    @deprecated("Obsolete.", "HTML 4.01") implicit object mountPointBuilder_HTMLFormElement_HTMLIsIndexElement extends MountPointBuilder[HTMLIsIndexElement, form.type, HTMLFormElement] {
      @deprecated("Obsolete.", "HTML 4.01") def mountProperty(element: HTMLIsIndexElement, binding: Binding[HTMLFormElement]) = {
        Binding.BindingInstances.map(binding)(element.form = _)
      }
    }
    implicit object mountPointBuilder_HTMLFormElement_HTMLProgressElement extends MountPointBuilder[HTMLProgressElement, form.type, HTMLFormElement] {
      def mountProperty(element: HTMLProgressElement, binding: Binding[HTMLFormElement]) = {
        Binding.BindingInstances.map(binding)(element.form = _)
      }
    }
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
    @inline implicit def attributeSetter_HTMLFieldSetElement: AttributeSetter[HTMLFieldSetElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
    @inline implicit def attributeSetter_HTMLOutputElement: AttributeSetter[HTMLOutputElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, form.type] = new AttributeSetter(_.setAttribute("form", _))
  }
  @inline def formAction: properties.formAction.type = properties.formAction
  @inline def formEnctype: properties.formEnctype.type = properties.formEnctype
  @inline def formMethod: properties.formMethod.type = properties.formMethod
  @inline def formNoValidate: properties.formNoValidate.type = properties.formNoValidate
  @inline def formTarget: properties.formTarget.type = properties.formTarget
  object formaction extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, formaction.type] = new AttributeSetter(_.setAttribute("formaction", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, formaction.type] = new AttributeSetter(_.setAttribute("formaction", _))
  }
  object formenctype extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, formenctype.type] = new AttributeSetter(_.setAttribute("formenctype", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, formenctype.type] = new AttributeSetter(_.setAttribute("formenctype", _))
  }
  object formmethod extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, formmethod.type] = new AttributeSetter(_.setAttribute("formmethod", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, formmethod.type] = new AttributeSetter(_.setAttribute("formmethod", _))
  }
  object formnovalidate extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, formnovalidate.type] = new AttributeSetter(_.setAttribute("formnovalidate", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, formnovalidate.type] = new AttributeSetter(_.setAttribute("formnovalidate", _))
  }
  object formtarget extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, formtarget.type] = new AttributeSetter(_.setAttribute("formtarget", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, formtarget.type] = new AttributeSetter(_.setAttribute("formtarget", _))
  }
  @inline def frame: properties.frame.type = properties.frame
  @inline def frameBorder: properties.frameBorder.type = properties.frameBorder
  @inline def frameSpacing: properties.frameSpacing.type = properties.frameSpacing
  @inline def gotpointercapture: properties.gotpointercapture.type = properties.gotpointercapture
  @inline def hash: properties.hash.type = properties.hash
  object headers extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLTableCellElement: AttributeSetter[HTMLTableCellElement, headers.type] = new AttributeSetter(_.setAttribute("headers", _)) }
  object height extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, height.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLImageElement extends MountPointBuilder[HTMLImageElement, height.type, Int] {
      def mountProperty(element: HTMLImageElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_js_Any_HTMLTableRowElement extends MountPointBuilder[HTMLTableRowElement, height.type, js.Any] {
      def mountProperty(element: HTMLTableRowElement, binding: Binding[js.Any]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, height.type, js.Any] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[js.Any]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, height.type, String] {
      def mountProperty(element: HTMLIFrameElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, height.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLCanvasElement extends MountPointBuilder[HTMLCanvasElement, height.type, Int] {
      def mountProperty(element: HTMLCanvasElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, height.type, js.Any] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCellElement, binding: Binding[js.Any]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, height.type, String] {
      def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLEmbedElement extends MountPointBuilder[HTMLEmbedElement, height.type, String] {
      def mountProperty(element: HTMLEmbedElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLVideoElement extends MountPointBuilder[HTMLVideoElement, height.type, Int] {
      def mountProperty(element: HTMLVideoElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, height.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.height = _)
      }
    }
    @inline implicit def attributeSetter_HTMLCanvasElement: AttributeSetter[HTMLCanvasElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
    @inline implicit def attributeSetter_HTMLEmbedElement: AttributeSetter[HTMLEmbedElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
    @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, height.type] = new AttributeSetter(_.setAttribute("height", _))
  }
  object hidden extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, hidden.type] = new AttributeSetter(_.setAttribute("hidden", _)) }
  object high extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLMeterElement: AttributeSetter[HTMLMeterElement, high.type] = new AttributeSetter(_.setAttribute("high", _)) }
  @inline def host: properties.host.type = properties.host
  @inline def hostname: properties.hostname.type = properties.hostname
  object href extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLBaseElement extends MountPointBuilder[HTMLBaseElement, href.type, String] {
      def mountProperty(element: HTMLBaseElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.href = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, href.type, String] {
      def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.href = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, href.type, String] {
      def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.href = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, href.type, String] {
      def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.href = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, href.type, String] {
      def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.href = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, href.type] = new AttributeSetter(_.setAttribute("href", _))
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, href.type] = new AttributeSetter(_.setAttribute("href", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, href.type] = new AttributeSetter(_.setAttribute("href", _))
    @inline implicit def attributeSetter_HTMLBaseElement: AttributeSetter[HTMLBaseElement, href.type] = new AttributeSetter(_.setAttribute("href", _))
  }
  object hreflang extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, hreflang.type, String] {
      def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.hreflang = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, hreflang.type, String] {
      def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.hreflang = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, hreflang.type] = new AttributeSetter(_.setAttribute("hreflang", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, hreflang.type] = new AttributeSetter(_.setAttribute("hreflang", _))
  }
  @inline def hspace: properties.hspace.type = properties.hspace
  @inline def htmlFor: properties.htmlFor.type = properties.htmlFor
  object http$minusequiv extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLMetaElement: AttributeSetter[HTMLMetaElement, http$minusequiv.type] = new AttributeSetter(_.setAttribute("http-equiv", _)) }
  @inline def httpEquiv: properties.httpEquiv.type = properties.httpEquiv
  object id extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_Element extends MountPointBuilder[Element, id.type, String] {
      def mountProperty(element: Element, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.id = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, id.type] = new AttributeSetter(_.setAttribute("id", _))
  }
  object imagesizes extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, imagesizes.type] = new AttributeSetter(_.setAttribute("imagesizes", _)) }
  object imagesrcset extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, imagesrcset.type] = new AttributeSetter(_.setAttribute("imagesrcset", _)) }
  @inline def indeterminate: properties.indeterminate.type = properties.indeterminate
  @inline def innerHTML: properties.innerHTML.type = properties.innerHTML
  object inputmode extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, inputmode.type] = new AttributeSetter(_.setAttribute("inputmode", _)) }
  object integrity extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, integrity.type] = new AttributeSetter(_.setAttribute("integrity", _))
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, integrity.type] = new AttributeSetter(_.setAttribute("integrity", _))
  }
  object is extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, is.type] = new AttributeSetter(_.setAttribute("is", _)) }
  @inline def isMap: properties.isMap.type = properties.isMap
  object ismap extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, ismap.type] = new AttributeSetter(_.setAttribute("ismap", _)) }
  object itemid extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, itemid.type] = new AttributeSetter(_.setAttribute("itemid", _)) }
  object itemprop extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, itemprop.type] = new AttributeSetter(_.setAttribute("itemprop", _)) }
  object itemref extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, itemref.type] = new AttributeSetter(_.setAttribute("itemref", _)) }
  object itemscope extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, itemscope.type] = new AttributeSetter(_.setAttribute("itemscope", _)) }
  object itemtype extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, itemtype.type] = new AttributeSetter(_.setAttribute("itemtype", _)) }
  object kind extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLTrackElement extends MountPointBuilder[HTMLTrackElement, kind.type, String] {
      def mountProperty(element: HTMLTrackElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.kind = _)
      }
    }
    @inline implicit def attributeSetter_HTMLTrackElement: AttributeSetter[HTMLTrackElement, kind.type] = new AttributeSetter(_.setAttribute("kind", _))
  }
  object label extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLOptionElement extends MountPointBuilder[HTMLOptionElement, label.type, String] {
      def mountProperty(element: HTMLOptionElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.label = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLOptGroupElement extends MountPointBuilder[HTMLOptGroupElement, label.type, String] {
      def mountProperty(element: HTMLOptGroupElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.label = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLTrackElement extends MountPointBuilder[HTMLTrackElement, label.type, String] {
      def mountProperty(element: HTMLTrackElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.label = _)
      }
    }
    @inline implicit def attributeSetter_HTMLOptGroupElement: AttributeSetter[HTMLOptGroupElement, label.type] = new AttributeSetter(_.setAttribute("label", _))
    @inline implicit def attributeSetter_HTMLOptionElement: AttributeSetter[HTMLOptionElement, label.type] = new AttributeSetter(_.setAttribute("label", _))
    @inline implicit def attributeSetter_HTMLTrackElement: AttributeSetter[HTMLTrackElement, label.type] = new AttributeSetter(_.setAttribute("label", _))
  }
  object lang extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLElement extends MountPointBuilder[HTMLElement, lang.type, String] {
      def mountProperty(element: HTMLElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.lang = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, lang.type] = new AttributeSetter(_.setAttribute("lang", _))
  }
  @inline def leftMargin: properties.leftMargin.type = properties.leftMargin
  @inline def length: properties.length.type = properties.length
  @inline def link: properties.link.type = properties.link
  object list extends AttributeFactory.Typed {
    implicit object mountPointBuilder_HTMLElement_HTMLInputElement extends MountPointBuilder[HTMLInputElement, list.type, HTMLElement] {
      def mountProperty(element: HTMLInputElement, binding: Binding[HTMLElement]) = {
        Binding.BindingInstances.map(binding)(element.list = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, list.type] = new AttributeSetter(_.setAttribute("list", _))
  }
  @inline def longDesc: properties.longDesc.type = properties.longDesc
  object loop extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, loop.type, Boolean] {
      def mountProperty(element: HTMLMediaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.loop = _)
      }
    }
    @deprecated("Non standard.", "forever") implicit object mountPointBuilder_Double_HTMLBGSoundElement extends MountPointBuilder[HTMLBGSoundElement, loop.type, Double] {
      @deprecated("Non standard.", "forever") def mountProperty(element: HTMLBGSoundElement, binding: Binding[Double]) = {
        Binding.BindingInstances.map(binding)(element.loop = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, loop.type, Int] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.loop = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, loop.type] = new AttributeSetter(_.setAttribute("loop", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, loop.type] = new AttributeSetter(_.setAttribute("loop", _))
  }
  @inline def lostpointercapture: properties.lostpointercapture.type = properties.lostpointercapture
  object low extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLMeterElement: AttributeSetter[HTMLMeterElement, low.type] = new AttributeSetter(_.setAttribute("low", _)) }
  object manifest extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLHtmlElement: AttributeSetter[HTMLHtmlElement, manifest.type] = new AttributeSetter(_.setAttribute("manifest", _)) }
  @inline def marginHeight: properties.marginHeight.type = properties.marginHeight
  @inline def marginWidth: properties.marginWidth.type = properties.marginWidth
  object max extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, max.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.max = _)
      }
    }
    implicit object mountPointBuilder_Double_HTMLProgressElement extends MountPointBuilder[HTMLProgressElement, max.type, Double] {
      def mountProperty(element: HTMLProgressElement, binding: Binding[Double]) = {
        Binding.BindingInstances.map(binding)(element.max = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, max.type] = new AttributeSetter(_.setAttribute("max", _))
    @inline implicit def attributeSetter_HTMLMeterElement: AttributeSetter[HTMLMeterElement, max.type] = new AttributeSetter(_.setAttribute("max", _))
    @inline implicit def attributeSetter_HTMLProgressElement: AttributeSetter[HTMLProgressElement, max.type] = new AttributeSetter(_.setAttribute("max", _))
  }
  @inline def maxLength: properties.maxLength.type = properties.maxLength
  object maxlength extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, maxlength.type] = new AttributeSetter(_.setAttribute("maxlength", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, maxlength.type] = new AttributeSetter(_.setAttribute("maxlength", _))
  }
  object media extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, media.type, String] {
      def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.media = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLSourceElement extends MountPointBuilder[HTMLSourceElement, media.type, String] {
      def mountProperty(element: HTMLSourceElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.media = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLStyleElement extends MountPointBuilder[HTMLStyleElement, media.type, String] {
      def mountProperty(element: HTMLStyleElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.media = _)
      }
    }
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, media.type] = new AttributeSetter(_.setAttribute("media", _))
    @inline implicit def attributeSetter_HTMLSourceElement: AttributeSetter[HTMLSourceElement, media.type] = new AttributeSetter(_.setAttribute("media", _))
    @inline implicit def attributeSetter_HTMLStyleElement: AttributeSetter[HTMLStyleElement, media.type] = new AttributeSetter(_.setAttribute("media", _))
  }
  object method extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, method.type, String] {
      def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.method = _)
      }
    }
    @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, method.type] = new AttributeSetter(_.setAttribute("method", _))
  }
  @inline def mimeType: properties.mimeType.type = properties.mimeType
  object min extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, min.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.min = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, min.type] = new AttributeSetter(_.setAttribute("min", _))
    @inline implicit def attributeSetter_HTMLMeterElement: AttributeSetter[HTMLMeterElement, min.type] = new AttributeSetter(_.setAttribute("min", _))
  }
  object minlength extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, minlength.type] = new AttributeSetter(_.setAttribute("minlength", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, minlength.type] = new AttributeSetter(_.setAttribute("minlength", _))
  }
  object multiple extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, multiple.type, Boolean] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.multiple = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, multiple.type, Boolean] {
      def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.multiple = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, multiple.type] = new AttributeSetter(_.setAttribute("multiple", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, multiple.type] = new AttributeSetter(_.setAttribute("multiple", _))
  }
  object muted extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, muted.type, Boolean] {
      def mountProperty(element: HTMLMediaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.muted = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, muted.type] = new AttributeSetter(_.setAttribute("muted", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, muted.type] = new AttributeSetter(_.setAttribute("muted", _))
  }
  object name extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, name.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, name.type, String] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLMetaElement extends MountPointBuilder[HTMLMetaElement, name.type, String] {
      def mountProperty(element: HTMLMetaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLMapElement extends MountPointBuilder[HTMLMapElement, name.type, String] {
      def mountProperty(element: HTMLMapElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, name.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, name.type, String] {
      def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, name.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, name.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, name.type, String] {
      def mountProperty(element: HTMLIFrameElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, name.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, name.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLParamElement extends MountPointBuilder[HTMLParamElement, name.type, String] {
      def mountProperty(element: HTMLParamElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, name.type, String] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, name.type, String] {
      def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, name.type, String] {
      def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.name = _)
      }
    }
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLFieldSetElement: AttributeSetter[HTMLFieldSetElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLOutputElement: AttributeSetter[HTMLOutputElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLMapElement: AttributeSetter[HTMLMapElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLMetaElement: AttributeSetter[HTMLMetaElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLParamElement: AttributeSetter[HTMLParamElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
    @inline implicit def attributeSetter_HTMLSlotElement: AttributeSetter[HTMLSlotElement, name.type] = new AttributeSetter(_.setAttribute("name", _))
  }
  @inline def naturalHeight: properties.naturalHeight.type = properties.naturalHeight
  @inline def naturalWidth: properties.naturalWidth.type = properties.naturalWidth
  @inline def noHref: properties.noHref.type = properties.noHref
  @inline def noResize: properties.noResize.type = properties.noResize
  @inline def noValidate: properties.noValidate.type = properties.noValidate
  @inline def noWrap: properties.noWrap.type = properties.noWrap
  object nomodule extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, nomodule.type] = new AttributeSetter(_.setAttribute("nomodule", _)) }
  object nonce extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, nonce.type] = new AttributeSetter(_.setAttribute("nonce", _)) }
  object novalidate extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, novalidate.type] = new AttributeSetter(_.setAttribute("novalidate", _)) }
  @inline def `object`: properties.`object`.type = properties.`object`
  object onabort extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onabort.type, js.Function1[UIEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onabort = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onabort.type] = new AttributeSetter(_.setAttribute("onabort", _))
  }
  @inline def onactivate: properties.onactivate.type = properties.onactivate
  object onafterprint extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onafterprint.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onafterprint = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onafterprint.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onafterprint = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onafterprint.type] = new AttributeSetter(_.setAttribute("onafterprint", _))
  }
  object onauxclick extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onauxclick.type] = new AttributeSetter(_.setAttribute("onauxclick", _)) }
  @inline def onbeforeactivate: properties.onbeforeactivate.type = properties.onbeforeactivate
  @inline def onbeforecopy: properties.onbeforecopy.type = properties.onbeforecopy
  @inline def onbeforecut: properties.onbeforecut.type = properties.onbeforecut
  @inline def onbeforedeactivate: properties.onbeforedeactivate.type = properties.onbeforedeactivate
  @inline def onbeforepaste: properties.onbeforepaste.type = properties.onbeforepaste
  object onbeforeprint extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onbeforeprint.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onbeforeprint = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onbeforeprint.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onbeforeprint = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onbeforeprint.type] = new AttributeSetter(_.setAttribute("onbeforeprint", _))
  }
  object onbeforeunload extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[BeforeUnloadEvent, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onbeforeunload.type, js.Function1[BeforeUnloadEvent, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[BeforeUnloadEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onbeforeunload = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[BeforeUnloadEvent, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onbeforeunload.type, js.Function1[BeforeUnloadEvent, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[BeforeUnloadEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onbeforeunload = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onbeforeunload.type] = new AttributeSetter(_.setAttribute("onbeforeunload", _))
  }
  object onblur extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[FocusEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onblur.type, js.Function1[FocusEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[FocusEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onblur = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onblur.type] = new AttributeSetter(_.setAttribute("onblur", _))
  }
  @inline def onbounce: properties.onbounce.type = properties.onbounce
  object oncancel extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncancel.type] = new AttributeSetter(_.setAttribute("oncancel", _)) }
  object oncanplay extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, oncanplay.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.oncanplay = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncanplay.type] = new AttributeSetter(_.setAttribute("oncanplay", _))
  }
  object oncanplaythrough extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, oncanplaythrough.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.oncanplaythrough = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncanplaythrough.type] = new AttributeSetter(_.setAttribute("oncanplaythrough", _))
  }
  object onchange extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onchange.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onchange = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onchange.type] = new AttributeSetter(_.setAttribute("onchange", _))
  }
  object onclick extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onclick.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onclick = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onclick.type] = new AttributeSetter(_.setAttribute("onclick", _))
  }
  object onclose extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onclose.type] = new AttributeSetter(_.setAttribute("onclose", _)) }
  object oncontextmenu extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, oncontextmenu.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.oncontextmenu = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncontextmenu.type] = new AttributeSetter(_.setAttribute("oncontextmenu", _))
  }
  object oncopy extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[ClipboardEvent, _]_Element` extends MountPointBuilder[Element, oncopy.type, js.Function1[ClipboardEvent, _]] {
      def mountProperty(element: Element, binding: Binding[js.Function1[ClipboardEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.oncopy = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncopy.type] = new AttributeSetter(_.setAttribute("oncopy", _))
  }
  object oncuechange extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, oncuechange.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.oncuechange = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncuechange.type] = new AttributeSetter(_.setAttribute("oncuechange", _))
  }
  object oncut extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[ClipboardEvent, _]_Element` extends MountPointBuilder[Element, oncut.type, js.Function1[ClipboardEvent, _]] {
      def mountProperty(element: Element, binding: Binding[js.Function1[ClipboardEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.oncut = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oncut.type] = new AttributeSetter(_.setAttribute("oncut", _))
  }
  object ondblclick extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondblclick.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondblclick = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondblclick.type] = new AttributeSetter(_.setAttribute("ondblclick", _))
  }
  @inline def ondeactivate: properties.ondeactivate.type = properties.ondeactivate
  object ondrag extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondrag.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondrag = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondrag.type] = new AttributeSetter(_.setAttribute("ondrag", _))
  }
  object ondragend extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondragend.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondragend = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondragend.type] = new AttributeSetter(_.setAttribute("ondragend", _))
  }
  object ondragenter extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondragenter.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondragenter = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondragenter.type] = new AttributeSetter(_.setAttribute("ondragenter", _))
  }
  object ondragexit extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondragexit.type] = new AttributeSetter(_.setAttribute("ondragexit", _)) }
  object ondragleave extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondragleave.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondragleave = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondragleave.type] = new AttributeSetter(_.setAttribute("ondragleave", _))
  }
  object ondragover extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondragover.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondragover = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondragover.type] = new AttributeSetter(_.setAttribute("ondragover", _))
  }
  object ondragstart extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondragstart.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondragstart = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondragstart.type] = new AttributeSetter(_.setAttribute("ondragstart", _))
  }
  object ondrop extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[DragEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondrop.type, js.Function1[DragEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[DragEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondrop = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondrop.type] = new AttributeSetter(_.setAttribute("ondrop", _))
  }
  object ondurationchange extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ondurationchange.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.ondurationchange = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ondurationchange.type] = new AttributeSetter(_.setAttribute("ondurationchange", _))
  }
  object onemptied extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onemptied.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onemptied = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onemptied.type] = new AttributeSetter(_.setAttribute("onemptied", _))
  }
  object onended extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onended.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onended = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onended.type] = new AttributeSetter(_.setAttribute("onended", _))
  }
  object onerror extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onerror.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onerror = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onerror.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onerror = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onerror.type] = new AttributeSetter(_.setAttribute("onerror", _))
  }
  @inline def onfinish: properties.onfinish.type = properties.onfinish
  object onfocus extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[FocusEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onfocus.type, js.Function1[FocusEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[FocusEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onfocus = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onfocus.type] = new AttributeSetter(_.setAttribute("onfocus", _))
  }
  @inline def onfocusin: properties.onfocusin.type = properties.onfocusin
  @inline def onfocusout: properties.onfocusout.type = properties.onfocusout
  object onformdata extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onformdata.type] = new AttributeSetter(_.setAttribute("onformdata", _)) }
  object onhashchange extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[HashChangeEvent, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onhashchange.type, js.Function1[HashChangeEvent, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[HashChangeEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onhashchange = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onhashchange.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onhashchange = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onhashchange.type] = new AttributeSetter(_.setAttribute("onhashchange", _))
  }
  @inline def onhelp: properties.onhelp.type = properties.onhelp
  object oninput extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, oninput.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.oninput = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oninput.type] = new AttributeSetter(_.setAttribute("oninput", _))
  }
  object oninvalid extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, oninvalid.type] = new AttributeSetter(_.setAttribute("oninvalid", _)) }
  object onkeydown extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[KeyboardEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onkeydown.type, js.Function1[KeyboardEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[KeyboardEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onkeydown = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onkeydown.type] = new AttributeSetter(_.setAttribute("onkeydown", _))
  }
  object onkeypress extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[KeyboardEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onkeypress.type, js.Function1[KeyboardEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[KeyboardEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onkeypress = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onkeypress.type] = new AttributeSetter(_.setAttribute("onkeypress", _))
  }
  object onkeyup extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[KeyboardEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onkeyup.type, js.Function1[KeyboardEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[KeyboardEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onkeyup = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onkeyup.type] = new AttributeSetter(_.setAttribute("onkeyup", _))
  }
  object onlanguagechange extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onlanguagechange.type] = new AttributeSetter(_.setAttribute("onlanguagechange", _)) }
  object onload extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLImageElement` extends MountPointBuilder[HTMLImageElement, onload.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLImageElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onload = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLScriptElement` extends MountPointBuilder[HTMLScriptElement, onload.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLScriptElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onload = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameElement` extends MountPointBuilder[HTMLFrameElement, onload.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onload = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onload.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onload = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLIFrameElement` extends MountPointBuilder[HTMLIFrameElement, onload.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLIFrameElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onload = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onload.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onload = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onload.type] = new AttributeSetter(_.setAttribute("onload", _))
  }
  object onloadeddata extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onloadeddata.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onloadeddata = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onloadeddata.type] = new AttributeSetter(_.setAttribute("onloadeddata", _))
  }
  object onloadedmetadata extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onloadedmetadata.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onloadedmetadata = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onloadedmetadata.type] = new AttributeSetter(_.setAttribute("onloadedmetadata", _))
  }
  object onloadstart extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onloadstart.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onloadstart = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onloadstart.type] = new AttributeSetter(_.setAttribute("onloadstart", _))
  }
  object onmessage extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[MessageEvent, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onmessage.type, js.Function1[MessageEvent, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[MessageEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmessage = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[MessageEvent, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onmessage.type, js.Function1[MessageEvent, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[MessageEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmessage = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onmessage.type] = new AttributeSetter(_.setAttribute("onmessage", _))
  }
  object onmessageerror extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onmessageerror.type] = new AttributeSetter(_.setAttribute("onmessageerror", _)) }
  object onmousedown extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmousedown.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmousedown = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmousedown.type] = new AttributeSetter(_.setAttribute("onmousedown", _))
  }
  object onmouseenter extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmouseenter.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmouseenter = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmouseenter.type] = new AttributeSetter(_.setAttribute("onmouseenter", _))
  }
  object onmouseleave extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmouseleave.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmouseleave = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmouseleave.type] = new AttributeSetter(_.setAttribute("onmouseleave", _))
  }
  object onmousemove extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmousemove.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmousemove = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmousemove.type] = new AttributeSetter(_.setAttribute("onmousemove", _))
  }
  object onmouseout extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmouseout.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmouseout = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmouseout.type] = new AttributeSetter(_.setAttribute("onmouseout", _))
  }
  object onmouseover extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmouseover.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmouseover = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmouseover.type] = new AttributeSetter(_.setAttribute("onmouseover", _))
  }
  object onmouseup extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[MouseEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onmouseup.type, js.Function1[MouseEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[MouseEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onmouseup = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onmouseup.type] = new AttributeSetter(_.setAttribute("onmouseup", _))
  }
  @inline def onmousewheel: properties.onmousewheel.type = properties.onmousewheel
  object onoffline extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onoffline.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onoffline = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onoffline.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onoffline = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onoffline.type] = new AttributeSetter(_.setAttribute("onoffline", _))
  }
  object ononline extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, ononline.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.ononline = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, ononline.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.ononline = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, ononline.type] = new AttributeSetter(_.setAttribute("ononline", _))
  }
  object onpagehide extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onpagehide.type] = new AttributeSetter(_.setAttribute("onpagehide", _)) }
  object onpageshow extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onpageshow.type] = new AttributeSetter(_.setAttribute("onpageshow", _)) }
  object onpaste extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[ClipboardEvent, _]_Element` extends MountPointBuilder[Element, onpaste.type, js.Function1[ClipboardEvent, _]] {
      def mountProperty(element: Element, binding: Binding[js.Function1[ClipboardEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onpaste = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onpaste.type] = new AttributeSetter(_.setAttribute("onpaste", _))
  }
  object onpause extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onpause.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onpause = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onpause.type] = new AttributeSetter(_.setAttribute("onpause", _))
  }
  object onplay extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onplay.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onplay = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onplay.type] = new AttributeSetter(_.setAttribute("onplay", _))
  }
  object onplaying extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onplaying.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onplaying = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onplaying.type] = new AttributeSetter(_.setAttribute("onplaying", _))
  }
  @inline def onpointercancel: properties.onpointercancel.type = properties.onpointercancel
  @inline def onpointerdown: properties.onpointerdown.type = properties.onpointerdown
  @inline def onpointerenter: properties.onpointerenter.type = properties.onpointerenter
  @inline def onpointerleave: properties.onpointerleave.type = properties.onpointerleave
  @inline def onpointermove: properties.onpointermove.type = properties.onpointermove
  @inline def onpointerout: properties.onpointerout.type = properties.onpointerout
  @inline def onpointerover: properties.onpointerover.type = properties.onpointerover
  @inline def onpointerup: properties.onpointerup.type = properties.onpointerup
  object onpopstate extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[PopStateEvent, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onpopstate.type, js.Function1[PopStateEvent, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[PopStateEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onpopstate = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onpopstate.type] = new AttributeSetter(_.setAttribute("onpopstate", _))
  }
  object onprogress extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[js_Any, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onprogress.type, js.Function1[js.Any, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[js.Any, _]]) = {
        Binding.BindingInstances.map(binding)(element.onprogress = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onprogress.type] = new AttributeSetter(_.setAttribute("onprogress", _))
  }
  object onratechange extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onratechange.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onratechange = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onratechange.type] = new AttributeSetter(_.setAttribute("onratechange", _))
  }
  @inline def onreadystatechange: properties.onreadystatechange.type = properties.onreadystatechange
  object onrejectionhandled extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onrejectionhandled.type] = new AttributeSetter(_.setAttribute("onrejectionhandled", _)) }
  object onreset extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onreset.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onreset = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onreset.type] = new AttributeSetter(_.setAttribute("onreset", _))
  }
  object onresize extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onresize.type, js.Function1[UIEvent, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[UIEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onresize = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onresize.type, js.Function1[UIEvent, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[UIEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onresize = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onresize.type] = new AttributeSetter(_.setAttribute("onresize", _))
  }
  object onscroll extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onscroll.type, js.Function1[UIEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onscroll = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onscroll.type] = new AttributeSetter(_.setAttribute("onscroll", _))
  }
  object onsecuritypolicyviolation extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onsecuritypolicyviolation.type] = new AttributeSetter(_.setAttribute("onsecuritypolicyviolation", _)) }
  object onseeked extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onseeked.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onseeked = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onseeked.type] = new AttributeSetter(_.setAttribute("onseeked", _))
  }
  object onseeking extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onseeking.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onseeking = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onseeking.type] = new AttributeSetter(_.setAttribute("onseeking", _))
  }
  object onselect extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[UIEvent, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onselect.type, js.Function1[UIEvent, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[UIEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onselect = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onselect.type] = new AttributeSetter(_.setAttribute("onselect", _))
  }
  @inline def onselectstart: properties.onselectstart.type = properties.onselectstart
  object onstalled extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onstalled.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onstalled = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onstalled.type] = new AttributeSetter(_.setAttribute("onstalled", _))
  }
  @inline def onstart: properties.onstart.type = properties.onstart
  object onstorage extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[StorageEvent, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onstorage.type, js.Function1[StorageEvent, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[StorageEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onstorage = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[StorageEvent, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onstorage.type, js.Function1[StorageEvent, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[StorageEvent, _]]) = {
        Binding.BindingInstances.map(binding)(element.onstorage = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onstorage.type] = new AttributeSetter(_.setAttribute("onstorage", _))
  }
  object onsubmit extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onsubmit.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onsubmit = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onsubmit.type] = new AttributeSetter(_.setAttribute("onsubmit", _))
  }
  object onsuspend extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onsuspend.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onsuspend = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onsuspend.type] = new AttributeSetter(_.setAttribute("onsuspend", _))
  }
  object ontimeupdate extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, ontimeupdate.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.ontimeupdate = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ontimeupdate.type] = new AttributeSetter(_.setAttribute("ontimeupdate", _))
  }
  object ontoggle extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, ontoggle.type] = new AttributeSetter(_.setAttribute("ontoggle", _)) }
  object onunhandledrejection extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onunhandledrejection.type] = new AttributeSetter(_.setAttribute("onunhandledrejection", _)) }
  object onunload extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLFrameSetElement` extends MountPointBuilder[HTMLFrameSetElement, onunload.type, js.Function1[Event, _]] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onunload = _)
      }
    }
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLBodyElement` extends MountPointBuilder[HTMLBodyElement, onunload.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLBodyElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onunload = _)
      }
    }
    @inline implicit def attributeSetter_HTMLBodyElement: AttributeSetter[HTMLBodyElement, onunload.type] = new AttributeSetter(_.setAttribute("onunload", _))
  }
  object onvolumechange extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onvolumechange.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onvolumechange = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onvolumechange.type] = new AttributeSetter(_.setAttribute("onvolumechange", _))
  }
  object onwaiting extends AttributeFactory.Typed {
    implicit object `mountPointBuilder_js_Function1[Event, _]_HTMLElement` extends MountPointBuilder[HTMLElement, onwaiting.type, js.Function1[Event, _]] {
      def mountProperty(element: HTMLElement, binding: Binding[js.Function1[Event, _]]) = {
        Binding.BindingInstances.map(binding)(element.onwaiting = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onwaiting.type] = new AttributeSetter(_.setAttribute("onwaiting", _))
  }
  object onwheel extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, onwheel.type] = new AttributeSetter(_.setAttribute("onwheel", _)) }
  object open extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLDetailsElement: AttributeSetter[HTMLDetailsElement, open.type] = new AttributeSetter(_.setAttribute("open", _))
    @inline implicit def attributeSetter_HTMLDialogElement: AttributeSetter[HTMLDialogElement, open.type] = new AttributeSetter(_.setAttribute("open", _))
  }
  object optimum extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLMeterElement: AttributeSetter[HTMLMeterElement, optimum.type] = new AttributeSetter(_.setAttribute("optimum", _)) }
  @inline def outerHTML: properties.outerHTML.type = properties.outerHTML
  @inline def parentElement: properties.parentElement.type = properties.parentElement
  @inline def pathname: properties.pathname.type = properties.pathname
  object pattern extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, pattern.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.pattern = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, pattern.type] = new AttributeSetter(_.setAttribute("pattern", _))
  }
  object ping extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, ping.type] = new AttributeSetter(_.setAttribute("ping", _))
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, ping.type] = new AttributeSetter(_.setAttribute("ping", _))
  }
  object placeholder extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, placeholder.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.placeholder = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, placeholder.type, String] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.placeholder = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, placeholder.type] = new AttributeSetter(_.setAttribute("placeholder", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, placeholder.type] = new AttributeSetter(_.setAttribute("placeholder", _))
  }
  @inline def playbackRate: properties.playbackRate.type = properties.playbackRate
  object playsinline extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, playsinline.type] = new AttributeSetter(_.setAttribute("playsinline", _)) }
  @inline def port: properties.port.type = properties.port
  object poster extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLVideoElement extends MountPointBuilder[HTMLVideoElement, poster.type, String] {
      def mountProperty(element: HTMLVideoElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.poster = _)
      }
    }
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, poster.type] = new AttributeSetter(_.setAttribute("poster", _))
  }
  object preload extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, preload.type, String] {
      def mountProperty(element: HTMLMediaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.preload = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, preload.type] = new AttributeSetter(_.setAttribute("preload", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, preload.type] = new AttributeSetter(_.setAttribute("preload", _))
  }
  @inline def profile: properties.profile.type = properties.profile
  @inline def prompt: properties.prompt.type = properties.prompt
  @inline def protocol: properties.protocol.type = properties.protocol
  @inline def readOnly: properties.readOnly.type = properties.readOnly
  object readonly extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, readonly.type] = new AttributeSetter(_.setAttribute("readonly", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, readonly.type] = new AttributeSetter(_.setAttribute("readonly", _))
  }
  @inline def readyState: properties.readyState.type = properties.readyState
  @inline def recordNumber: properties.recordNumber.type = properties.recordNumber
  object referrerpolicy extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, referrerpolicy.type] = new AttributeSetter(_.setAttribute("referrerpolicy", _))
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, referrerpolicy.type] = new AttributeSetter(_.setAttribute("referrerpolicy", _))
    @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, referrerpolicy.type] = new AttributeSetter(_.setAttribute("referrerpolicy", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, referrerpolicy.type] = new AttributeSetter(_.setAttribute("referrerpolicy", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, referrerpolicy.type] = new AttributeSetter(_.setAttribute("referrerpolicy", _))
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, referrerpolicy.type] = new AttributeSetter(_.setAttribute("referrerpolicy", _))
  }
  object rel extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, rel.type, String] {
      def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.rel = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, rel.type, String] {
      def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.rel = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, rel.type] = new AttributeSetter(_.setAttribute("rel", _))
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, rel.type] = new AttributeSetter(_.setAttribute("rel", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, rel.type] = new AttributeSetter(_.setAttribute("rel", _))
  }
  object required extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, required.type, Boolean] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.required = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLInputElement extends MountPointBuilder[HTMLInputElement, required.type, Boolean] {
      def mountProperty(element: HTMLInputElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.required = _)
      }
    }
    implicit object mountPointBuilder_Boolean_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, required.type, Boolean] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.required = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, required.type] = new AttributeSetter(_.setAttribute("required", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, required.type] = new AttributeSetter(_.setAttribute("required", _))
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, required.type] = new AttributeSetter(_.setAttribute("required", _))
  }
  @inline def rev: properties.rev.type = properties.rev
  object reversed extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLOListElement: AttributeSetter[HTMLOListElement, reversed.type] = new AttributeSetter(_.setAttribute("reversed", _)) }
  @inline def rightMargin: properties.rightMargin.type = properties.rightMargin
  @inline def rowSpan: properties.rowSpan.type = properties.rowSpan
  object rows extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameSetElement extends MountPointBuilder[HTMLFrameSetElement, rows.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameSetElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.rows = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, rows.type, Int] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.rows = _)
      }
    }
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, rows.type] = new AttributeSetter(_.setAttribute("rows", _))
  }
  object rowspan extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLTableCellElement: AttributeSetter[HTMLTableCellElement, rowspan.type] = new AttributeSetter(_.setAttribute("rowspan", _)) }
  @inline def rules: properties.rules.type = properties.rules
  object sandbox extends AttributeFactory.Typed {
    implicit object mountPointBuilder_DOMSettableTokenList_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, sandbox.type, DOMSettableTokenList] {
      def mountProperty(element: HTMLIFrameElement, binding: Binding[DOMSettableTokenList]) = {
        Binding.BindingInstances.map(binding)(element.sandbox = _)
      }
    }
    @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, sandbox.type] = new AttributeSetter(_.setAttribute("sandbox", _))
  }
  @inline def scheme: properties.scheme.type = properties.scheme
  object scope extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLTableCellElement: AttributeSetter[HTMLTableCellElement, scope.type] = new AttributeSetter(_.setAttribute("scope", _)) }
  @inline def scroll: properties.scroll.type = properties.scroll
  @inline def scrollAmount: properties.scrollAmount.type = properties.scrollAmount
  @inline def scrollDelay: properties.scrollDelay.type = properties.scrollDelay
  @inline def scrollLeft: properties.scrollLeft.type = properties.scrollLeft
  @inline def scrollTop: properties.scrollTop.type = properties.scrollTop
  @inline def scrolling: properties.scrolling.type = properties.scrolling
  @inline def search: properties.search.type = properties.search
  @inline def security: properties.security.type = properties.security
  object selected extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLOptionElement extends MountPointBuilder[HTMLOptionElement, selected.type, Boolean] {
      def mountProperty(element: HTMLOptionElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.selected = _)
      }
    }
    @inline implicit def attributeSetter_HTMLOptionElement: AttributeSetter[HTMLOptionElement, selected.type] = new AttributeSetter(_.setAttribute("selected", _))
  }
  @inline def selectedIndex: properties.selectedIndex.type = properties.selectedIndex
  @inline def selectionEnd: properties.selectionEnd.type = properties.selectionEnd
  @inline def selectionStart: properties.selectionStart.type = properties.selectionStart
  object shape extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, shape.type, String] {
      def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.shape = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, shape.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.shape = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, shape.type] = new AttributeSetter(_.setAttribute("shape", _))
  }
  object size extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Int_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, size.type, Int] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.size = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLInputElement extends MountPointBuilder[HTMLInputElement, size.type, Int] {
      def mountProperty(element: HTMLInputElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.size = _)
      }
    }
    @deprecated("Obsolete.", "DOM Level 2") implicit object mountPointBuilder_Int_HTMLBaseFontElement extends MountPointBuilder[HTMLBaseFontElement, size.type, Int] {
      @deprecated("Obsolete.", "DOM Level 2") def mountProperty(element: HTMLBaseFontElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.size = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, size.type] = new AttributeSetter(_.setAttribute("size", _))
    @inline implicit def attributeSetter_HTMLSelectElement: AttributeSetter[HTMLSelectElement, size.type] = new AttributeSetter(_.setAttribute("size", _))
  }
  object sizes extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, sizes.type] = new AttributeSetter(_.setAttribute("sizes", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, sizes.type] = new AttributeSetter(_.setAttribute("sizes", _))
    @inline implicit def attributeSetter_HTMLSourceElement: AttributeSetter[HTMLSourceElement, sizes.type] = new AttributeSetter(_.setAttribute("sizes", _))
  }
  object slot extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, slot.type] = new AttributeSetter(_.setAttribute("slot", _)) }
  object span extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Int_HTMLTableColElement extends MountPointBuilder[HTMLTableColElement, span.type, Int] {
      def mountProperty(element: HTMLTableColElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.span = _)
      }
    }
    @inline implicit def attributeSetter_HTMLTableColElement: AttributeSetter[HTMLTableColElement, span.type] = new AttributeSetter(_.setAttribute("span", _))
  }
  object spellcheck extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Boolean_HTMLElement extends MountPointBuilder[HTMLElement, spellcheck.type, Boolean] {
      def mountProperty(element: HTMLElement, binding: Binding[Boolean]) = {
        Binding.BindingInstances.map(binding)(element.spellcheck = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, spellcheck.type] = new AttributeSetter(_.setAttribute("spellcheck", _))
  }
  object src extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLImageElement extends MountPointBuilder[HTMLImageElement, src.type, String] {
      def mountProperty(element: HTMLImageElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLSourceElement extends MountPointBuilder[HTMLSourceElement, src.type, String] {
      def mountProperty(element: HTMLSourceElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, src.type, String] {
      def mountProperty(element: HTMLScriptElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, src.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, src.type, String] {
      def mountProperty(element: HTMLIFrameElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, src.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLMediaElement extends MountPointBuilder[HTMLMediaElement, src.type, String] {
      def mountProperty(element: HTMLMediaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    @deprecated("Non standard.", "forever") implicit object mountPointBuilder_String_HTMLBGSoundElement extends MountPointBuilder[HTMLBGSoundElement, src.type, String] {
      @deprecated("Non standard.", "forever") def mountProperty(element: HTMLBGSoundElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLEmbedElement extends MountPointBuilder[HTMLEmbedElement, src.type, String] {
      def mountProperty(element: HTMLEmbedElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLTrackElement extends MountPointBuilder[HTMLTrackElement, src.type, String] {
      def mountProperty(element: HTMLTrackElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.src = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAudioElement: AttributeSetter[HTMLAudioElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLEmbedElement: AttributeSetter[HTMLEmbedElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLSourceElement: AttributeSetter[HTMLSourceElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLTrackElement: AttributeSetter[HTMLTrackElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, src.type] = new AttributeSetter(_.setAttribute("src", _))
  }
  object srcdoc extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, srcdoc.type] = new AttributeSetter(_.setAttribute("srcdoc", _)) }
  object srclang extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLTrackElement extends MountPointBuilder[HTMLTrackElement, srclang.type, String] {
      def mountProperty(element: HTMLTrackElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.srclang = _)
      }
    }
    @inline implicit def attributeSetter_HTMLTrackElement: AttributeSetter[HTMLTrackElement, srclang.type] = new AttributeSetter(_.setAttribute("srclang", _))
  }
  object srcset extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, srcset.type] = new AttributeSetter(_.setAttribute("srcset", _))
    @inline implicit def attributeSetter_HTMLSourceElement: AttributeSetter[HTMLSourceElement, srcset.type] = new AttributeSetter(_.setAttribute("srcset", _))
  }
  @inline def standby: properties.standby.type = properties.standby
  object start extends AttributeFactory.Typed {
    implicit object mountPointBuilder_Int_HTMLOListElement extends MountPointBuilder[HTMLOListElement, start.type, Int] {
      def mountProperty(element: HTMLOListElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.start = _)
      }
    }
    @inline implicit def attributeSetter_HTMLOListElement: AttributeSetter[HTMLOListElement, start.type] = new AttributeSetter(_.setAttribute("start", _))
  }
  @inline def status: properties.status.type = properties.status
  object step extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, step.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.step = _)
      }
    }
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, step.type] = new AttributeSetter(_.setAttribute("step", _))
  }
  object style extends AttributeFactory.Typed {
    implicit object mountPointBuilder_CSSStyleDeclaration_HTMLElement extends MountPointBuilder[HTMLElement, style.type, CSSStyleDeclaration] {
      def mountProperty(element: HTMLElement, binding: Binding[CSSStyleDeclaration]) = {
        Binding.BindingInstances.map(binding)(element.style = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLElement extends MountPointBuilder[HTMLElement, style.type, String] {
      def mountProperty(element: HTMLElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.style.cssText = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, style.type] = new AttributeSetter(_.style.cssText = _)
  }
  @inline def summary: properties.summary.type = properties.summary
  @inline def tFoot: properties.tFoot.type = properties.tFoot
  @inline def tHead: properties.tHead.type = properties.tHead
  @inline def tabIndex: properties.tabIndex.type = properties.tabIndex
  object tabindex extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, tabindex.type] = new AttributeSetter(_.setAttribute("tabindex", _)) }
  object target extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLBaseElement extends MountPointBuilder[HTMLBaseElement, target.type, String] {
      def mountProperty(element: HTMLBaseElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.target = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, target.type, String] {
      def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.target = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAreaElement extends MountPointBuilder[HTMLAreaElement, target.type, String] {
      def mountProperty(element: HTMLAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.target = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, target.type, String] {
      def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.target = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLFormElement extends MountPointBuilder[HTMLFormElement, target.type, String] {
      def mountProperty(element: HTMLFormElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.target = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, target.type] = new AttributeSetter(_.setAttribute("target", _))
    @inline implicit def attributeSetter_HTMLAreaElement: AttributeSetter[HTMLAreaElement, target.type] = new AttributeSetter(_.setAttribute("target", _))
    @inline implicit def attributeSetter_HTMLBaseElement: AttributeSetter[HTMLBaseElement, target.type] = new AttributeSetter(_.setAttribute("target", _))
    @inline implicit def attributeSetter_HTMLFormElement: AttributeSetter[HTMLFormElement, target.type] = new AttributeSetter(_.setAttribute("target", _))
  }
  @inline def text: properties.text.type = properties.text
  object title extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLElement extends MountPointBuilder[HTMLElement, title.type, String] {
      def mountProperty(element: HTMLElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.title = _)
      }
    }
    @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, title.type] = new AttributeSetter(_.setAttribute("title", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, title.type] = new AttributeSetter(_.setAttribute("title", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, title.type] = new AttributeSetter(_.setAttribute("title", _))
    @inline implicit def attributeSetter_HTMLStyleElement: AttributeSetter[HTMLStyleElement, title.type] = new AttributeSetter(_.setAttribute("title", _))
  }
  object translate extends AttributeFactory.Typed { @inline implicit def attributeSetter_HTMLElement: AttributeSetter[HTMLElement, translate.type] = new AttributeSetter(_.setAttribute("translate", _)) }
  @inline def trueSpeed: properties.trueSpeed.type = properties.trueSpeed
  object `type` extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, `type`.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLLinkElement extends MountPointBuilder[HTMLLinkElement, `type`.type, String] {
      def mountProperty(element: HTMLLinkElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLMenuElement extends MountPointBuilder[HTMLMenuElement, `type`.type, String] {
      def mountProperty(element: HTMLMenuElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, `type`.type, String] {
      def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLSourceElement extends MountPointBuilder[HTMLSourceElement, `type`.type, String] {
      def mountProperty(element: HTMLSourceElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLScriptElement extends MountPointBuilder[HTMLScriptElement, `type`.type, String] {
      def mountProperty(element: HTMLScriptElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, `type`.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLAnchorElement extends MountPointBuilder[HTMLAnchorElement, `type`.type, String] {
      def mountProperty(element: HTMLAnchorElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLParamElement extends MountPointBuilder[HTMLParamElement, `type`.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLParamElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLStyleElement extends MountPointBuilder[HTMLStyleElement, `type`.type, String] {
      def mountProperty(element: HTMLStyleElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, `type`.type, String] {
      def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.`type` = _)
      }
    }
    @inline implicit def attributeSetter_HTMLAnchorElement: AttributeSetter[HTMLAnchorElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLLinkElement: AttributeSetter[HTMLLinkElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLEmbedElement: AttributeSetter[HTMLEmbedElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLSourceElement: AttributeSetter[HTMLSourceElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLOListElement: AttributeSetter[HTMLOListElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
    @inline implicit def attributeSetter_HTMLScriptElement: AttributeSetter[HTMLScriptElement, `type`.type] = new AttributeSetter(_.setAttribute("type", _))
  }
  @inline def url: properties.url.type = properties.url
  @inline def useMap: properties.useMap.type = properties.useMap
  object usemap extends AttributeFactory.Typed {
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, usemap.type] = new AttributeSetter(_.setAttribute("usemap", _))
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, usemap.type] = new AttributeSetter(_.setAttribute("usemap", _))
  }
  @inline def vAlign: properties.vAlign.type = properties.vAlign
  @inline def vLink: properties.vLink.type = properties.vLink
  object value extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLSelectElement extends MountPointBuilder[HTMLSelectElement, value.type, String] {
      def mountProperty(element: HTMLSelectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLOptionElement extends MountPointBuilder[HTMLOptionElement, value.type, String] {
      def mountProperty(element: HTMLOptionElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLButtonElement extends MountPointBuilder[HTMLButtonElement, value.type, String] {
      def mountProperty(element: HTMLButtonElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLLIElement extends MountPointBuilder[HTMLLIElement, value.type, Int] {
      def mountProperty(element: HTMLLIElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, value.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLParamElement extends MountPointBuilder[HTMLParamElement, value.type, String] {
      def mountProperty(element: HTMLParamElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, value.type, String] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    implicit object mountPointBuilder_Double_HTMLProgressElement extends MountPointBuilder[HTMLProgressElement, value.type, Double] {
      def mountProperty(element: HTMLProgressElement, binding: Binding[Double]) = {
        Binding.BindingInstances.map(binding)(element.value = _)
      }
    }
    @inline implicit def attributeSetter_HTMLButtonElement: AttributeSetter[HTMLButtonElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLOptionElement: AttributeSetter[HTMLOptionElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLDataElement: AttributeSetter[HTMLDataElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLLIElement: AttributeSetter[HTMLLIElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLMeterElement: AttributeSetter[HTMLMeterElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLProgressElement: AttributeSetter[HTMLProgressElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
    @inline implicit def attributeSetter_HTMLParamElement: AttributeSetter[HTMLParamElement, value.type] = new AttributeSetter(_.setAttribute("value", _))
  }
  @inline def valueAsNumber: properties.valueAsNumber.type = properties.valueAsNumber
  @inline def valueType: properties.valueType.type = properties.valueType
  @inline def version: properties.version.type = properties.version
  @inline def volume: properties.volume.type = properties.volume
  @inline def vspace: properties.vspace.type = properties.vspace
  object width extends AttributeFactory.Typed {
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLTableElement extends MountPointBuilder[HTMLTableElement, width.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Double_HTMLAppletElement extends MountPointBuilder[HTMLAppletElement, width.type, Double] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLAppletElement, binding: Binding[Double]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLImageElement extends MountPointBuilder[HTMLImageElement, width.type, Int] {
      def mountProperty(element: HTMLImageElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLFrameElement extends MountPointBuilder[HTMLFrameElement, width.type, js.Any] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLFrameElement, binding: Binding[js.Any]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLIFrameElement extends MountPointBuilder[HTMLIFrameElement, width.type, String] {
      def mountProperty(element: HTMLIFrameElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLInputElement extends MountPointBuilder[HTMLInputElement, width.type, String] {
      def mountProperty(element: HTMLInputElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLPreElement extends MountPointBuilder[HTMLPreElement, width.type, Int] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLPreElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLCanvasElement extends MountPointBuilder[HTMLCanvasElement, width.type, Int] {
      def mountProperty(element: HTMLCanvasElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Int_HTMLTableCellElement extends MountPointBuilder[HTMLTableCellElement, width.type, Int] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableCellElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_js_Any_HTMLTableColElement extends MountPointBuilder[HTMLTableColElement, width.type, js.Any] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLTableColElement, binding: Binding[js.Any]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_Double_HTMLHRElement extends MountPointBuilder[HTMLHRElement, width.type, Double] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLHRElement, binding: Binding[Double]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLObjectElement extends MountPointBuilder[HTMLObjectElement, width.type, String] {
      def mountProperty(element: HTMLObjectElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_String_HTMLEmbedElement extends MountPointBuilder[HTMLEmbedElement, width.type, String] {
      def mountProperty(element: HTMLEmbedElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    implicit object mountPointBuilder_Int_HTMLVideoElement extends MountPointBuilder[HTMLVideoElement, width.type, Int] {
      def mountProperty(element: HTMLVideoElement, binding: Binding[Int]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @deprecated("Obsolete.", "HTML 5") implicit object mountPointBuilder_String_HTMLMarqueeElement extends MountPointBuilder[HTMLMarqueeElement, width.type, String] {
      @deprecated("Obsolete.", "HTML 5") def mountProperty(element: HTMLMarqueeElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.width = _)
      }
    }
    @inline implicit def attributeSetter_HTMLCanvasElement: AttributeSetter[HTMLCanvasElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
    @inline implicit def attributeSetter_HTMLEmbedElement: AttributeSetter[HTMLEmbedElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
    @inline implicit def attributeSetter_HTMLIFrameElement: AttributeSetter[HTMLIFrameElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
    @inline implicit def attributeSetter_HTMLImageElement: AttributeSetter[HTMLImageElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
    @inline implicit def attributeSetter_HTMLInputElement: AttributeSetter[HTMLInputElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
    @inline implicit def attributeSetter_HTMLObjectElement: AttributeSetter[HTMLObjectElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
    @inline implicit def attributeSetter_HTMLVideoElement: AttributeSetter[HTMLVideoElement, width.type] = new AttributeSetter(_.setAttribute("width", _))
  }
  object wrap extends AttributeFactory.Typed {
    implicit object mountPointBuilder_String_HTMLTextAreaElement extends MountPointBuilder[HTMLTextAreaElement, wrap.type, String] {
      def mountProperty(element: HTMLTextAreaElement, binding: Binding[String]) = {
        Binding.BindingInstances.map(binding)(element.wrap = _)
      }
    }
    @inline implicit def attributeSetter_HTMLTextAreaElement: AttributeSetter[HTMLTextAreaElement, wrap.type] = new AttributeSetter(_.setAttribute("wrap", _))
  }
}
